name: CI
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  docs:
    name: CMake LGTM
    runs-on: ubuntu-latest

    steps:
      - name: LGTM
        run: echo "LGTM" #TODO, uncomment

# jobs:
#   build:
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-latest, windows-latest, macOS-latest]
#         # type: [Debug, RelWithDebInfo, MinSizeRel, Release] 
#         type: [Release] 
#         compiler: [default, clang, gcc]
#         exclude:
#           - {os: "ubuntu-latest", compiler: "default"}
#           - {os: "ubuntu-latest", compiler: "clang"}
#           - {os: "macOS-latest", compiler: "gcc"}  # not needed
#           - {os: "macOS-latest", compiler: "clang"} # handled by `default`
          
#     runs-on: ${{ matrix.os }}
    
#     steps: 
#       - uses: actions/checkout@v1

#       - name: Create the Build Folder
#         run: |
#           mkdir ${{github.workspace}}/build
        
#       - name: Set up Compilers on Ubuntu
#         if: matrix.os == 'ubuntu-latest'
#         run: |
#           sudo apt-get install -y gcc-11 g++-10 clang-10
#       - name: Default Platform Compiler
#         shell: bash
#         if: matrix.compiler == 'default'
#         run: |
#           cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.type }}
      
#       - name: GCC
#         shell: bash
#         if: matrix.compiler == 'gcc'
#         run: |
#           cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.type }} -DCMAKE_C_COMPILER=gcc-11 -DCMAKE_CXX_COMPILER=g++-10
      
#       - name: Clang (Ubuntu)
#         shell: bash
#         if: (matrix.compiler == 'clang') && (matrix.os == 'ubuntu-latest')
#         run: |
#           cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.type }} -DCMAKE_C_COMPILER=clang-10 -DCMAKE_CXX_COMPILER=clang++-10

#       - name: Clang (Windows)
#         shell: bash
#         if: (matrix.compiler == 'clang') && (matrix.os == 'windows-latest')
#         run: |
#           cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.type }} -DCMAKE_C_COMPILER=clang-cl 

#       - name: Build
#         shell: bash
#         run: |
#           cmake --build build/ --config ${{ matrix.type }}
